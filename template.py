# *-* encoding: utf-8 *-*

# 请使用该main.py文件！它整合了所有功能，可以更方便的“Fuck School”
# template.py是main.py的模板，但缺失了很多重要信息，和main.py有本质的区别
# 若想通过template.py生成main.py，请使用update.py

import tkinter as tk
from tkinter import font, messagebox
import os

fucks = []
descriptions = []
filenames = []

class SelectPage(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)

        self.create_widgets()

    def create_widgets(self):
        self.list = tk.Listbox(self, selectmode=tk.SINGLE)
        self.list.pack(fill=tk.BOTH, expand=True)

        special_folder = ['All Users', 'Default', 'Default User', 'desktop.ini', 'Public']
        for user in os.listdir('C:\\Users\\'):
            if user in special_folder:
                continue
            self.list.insert(tk.END, user)

class FuckPage(tk.Frame):
    def __init__(self, master=None, index=0):
        super().__init__(master)

        self.index = index
        self.create_widgets()

    def create_widgets(self):
        self.text = tk.Text(self, font=font.Font(family='新宋体'))
        self.text.pack(fill=tk.BOTH, expand=True)

        self.text.tag_config('name', font=font.Font(family='新宋体', slant='italic'))
        self.text.tag_config('title', font=font.Font(family='新宋体', weight='bold'))

        self.text.config(state=tk.NORMAL)
        for line in descriptions[self.index] \
                        .replace('{filename}', filenames[self.index]) \
                        .split('\n'):
            style = []

            for char in line:
                if char == '“':
                    style.append('name')
                elif char == '【':
                    style.append('title')

                self.text.insert(tk.END, char.replace('*', '※'), *style)

                if char == '”':
                    style.remove('name')
                elif char == '】':
                    style.remove('title')
            self.text.insert(tk.END, '\n')
        self.text.config(state=tk.DISABLED)

class GoodbyePage(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)

        self.create_widgets()

    def create_widgets(self):
        self.label = tk.Message(self, text='恭喜你，你已经成功完成了设置向导！\n\n确定要应用你的设置吗，请慎重决定！', width=400, font=font.Font(size=16))
        self.label.pack(fill=tk.BOTH, expand=True)

class MainWindow(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Fuck School")
        self.geometry('480x360')

        self.index = 0
        self.last_page = None
        self.create_widgets()
        self.create_widgets()
        self.selected = []

    def select(self, value):
        print('用户选择', value)
        self.selected.append(value)
        self.create_widgets()

    def create_widgets(self):
        if self.last_page:
            self.last_page.destroy()

        if self.index == 0:
            self.top_frame = tk.Frame(self)
            self.top_frame.pack(side=tk.TOP, fill=tk.X)

            self.left_button = tk.Button(self.top_frame, text='...')
            self.left_button.pack(side=tk.LEFT)

            self.right_button = tk.Button(self.top_frame, text='...')
            self.right_button.pack(side=tk.RIGHT)

            self.title_label = tk.Label(self.top_frame, text='...')
            self.title_label.pack(side=tk.TOP, fill=tk.X)

        if self.index == 1:
            self.left_button.config(state=tk.DISABLED, text='【禁用】', command=lambda: None)
            command = lambda: self.select(l.get(l.curselection()[0])) \
                          if l.curselection() \
                          else messagebox.showwarning('警告', '请先选择用户！')
            self.right_button.config(state=tk.NORMAL, text='确定', command=command)
            self.title_label.config(text='选择用户')

            self.last_page = SelectPage(self)
            l = self.last_page.list
            self.last_page.pack(fill=tk.BOTH, expand=True)
        
        if 2 <= self.index <= 1 + len(fucks):
            self.left_button.config(state=tk.NORMAL, text='启用', command=lambda: self.select('enable'))
            self.right_button.config(state=tk.NORMAL, text='禁用', command=lambda: self.select('disable'))
            self.title_label.config(text='恶搞模块')

            self.last_page = FuckPage(self, index=self.index - 2)
            self.last_page.pack(fill=tk.BOTH, expand=True)
        
        if self.index > 1 + len(fucks):
            self.left_button.config(state=tk.NORMAL, text='应用（慎重）', command=lambda: self.last_step())
            self.right_button.config(state=tk.NORMAL, text='退出', command=lambda: self.destroy())
            self.title_label.config(text='再见！')

            self.last_page = GoodbyePage(self)
            self.last_page.pack(fill=tk.BOTH, expand=True)
        
        self.index += 1
    
    def last_step(self):
        result = ['# *-* encoding: utf-8 *-*\n\n' \
                  '# This file is generated by Fuck School. Please do not modify it.\n' \
                  '# 这个文件是由 Fuck School 自动生成的。请不要修改它。\n']
        username = self.selected.pop(0)
        for i, item in enumerate(zip(fucks, self.selected)):
            code, state = item
            if state == 'enable':
                result.append(code.replace('{username}', username)
                                  .replace('{filename}', filenames[i]))
        codes = '\n'.join(result)
        fuck_file = f'C:\\Users\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\fuck_school.pyw'
        with open(fuck_file, 'w', encoding='utf-8') as f:
            f.write(codes + '\n')
        fast_start = messagebox.askyesno('恭喜！', '恶搞设置已应用，并添加到计算机自动启动文件夹。\n\n点击确定立即启用恶搞设置。')
        self.destroy()
        if fast_start:
            os.startfile(fuck_file)
        
MainWindow().mainloop()
